<script setup>
import InputError from '@/Components/InputError.vue';
import InputLabel from '@/Components/InputLabel.vue';
import PrimaryButton from '@/Components/PrimaryButton.vue';
import TextInput from '@/Components/TextInput.vue';
import TextAreaInput from '@/Components/TextAreaInput.vue';
import Card from '@/Components/Card.vue';
import { useForm } from '@inertiajs/inertia-vue3';

defineProps([
  event: {
    type: Object,
    required: false,
  },
  errors: { 
    type: Object,
    required: false,
  },
  submit: {
    type: Function,
    required: true,
  },
]);

const form = useForm({
    name: '',
    description: '',
    start_date: '',
    end_date: '',
    start_time: '',
    end_time: '',
    location: '',
    images: '',
});

if (submit === 'create') {
  form.set('name', event.name);
  form.set('description', event.description);
  form.set('start_date', event.start_date);
  form.set('end_date', event.end_date);
  form.set('start_time', event.start_time);
  form.set('end_time', event.end_time);
  form.set('location', event.location);
  form.set('images', event.images);

  const submit = () => {
    form.post(route('events.store'), {
      onFinish: () => form.reset('password'),
    });
  };
}
else if (submit === 'edit') {
  form.set('name', event.name);
  form.set('description', event.description);
  form.set('start_date', event.start_date);
  form.set('end_date', event.end_date);
  form.set('start_time', event.start_time);
  form.set('end_time', event.end_time);
  form.set('location', event.location);
  form.set('images', event.images);
}

</script>
<template>
<Card>
  <form @submit.prevent="submit" >
    <InputLabel for="title" value="Event Title" />
    <TextInput
      id="title"
      type="text"
      class="mt-1 block w-full"
      v-model="form.title"
      required
      autofocus
      autocomplete="title"
    />
    <InputError class="mt-2" :message="form.errors.title" />

    <InputLabel for="location" value="Address" />
    <TextInput
      id="location"
      type="text"
      class="mt-1 block w-full"
      v-model="form.location"
      required
      autocomplete="location"
    />
    <InputError class="mt-2" :message="form.errors.location" />

    <InputLabel for="description" value="Description" />
    <TextAreaInput
      id="description"
      class="mt-1 block w-full"
      v-model="form.description"
      required
      autocomplete="description"
    />
    <InputError class="mt-2" :message="form.errors.description" />

  <div class="flex mb-3">
    <div class="w-1/2 pr-2">
      <InputLabel for="start_date" value="Start Date" />
      <DateInput id="start_date" class="mt-1 block w-full" v-model="form.start_date" required />
      <InputError class="mt-2" :message="form.errors.start_date" />
    </div>
    <div class="w-1/2 pl-2">
      <InputLabel for="end_date" value="End Date (optional)" />
      <DateInput id="end_date" class="mt-1 block w-full" v-model="form.end_date" />
      <InputError class="mt-2" :message="form.errors.end_date" />
    </div>
  </div>

  <input type="file" name="images" id="images" class="hidden" multiple @change="onFileChange" />


  </form>
</Card>
</template>
